pipeline {
    agent any
    stages {
            stage('Preparation') {
                steps {
                    script {
                        to = emailextrecipients([
                            [$class: 'CulpritsRecipientProvider'],
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider']
                        ])
                    
                        checkout scm
                        sh 'git rev-parse --short HEAD > .git/commit-id'
                        commit_id = readFile('.git/commit-id').trim()
                    }
                }
            }

            stage('Build AND Publish') {
                steps {
                    bat 'dotnet publish -c Release -o app/publish'
                }
            }
    }

    post {
        always {
            script {
                def content = '${JELLY_SCRIPT,template="html"}'
            }
        }
        success {
                script {
                    // mark build as failed
                    currentBuild.result = 'Success'
                    // set variables
                    def subject = "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} ${currentBuild.result}"

                    // send email
                    if(to != null && !to.isEmpty()) {
                    emailext(body: content, mimeType: 'text/html',
                        replyTo: '$DEFAULT_REPLYTO', subject: subject,
                        to: to, attachLog: true )
                    }
                }
            }

            failure {
                script {
                    // mark build as failed
                    currentBuild.result = 'Failed'
                    // set variables
                    def subject = "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} ${currentBuild.result}"

                    // send email
                    if(to != null && !to.isEmpty()) {
                    emailext(body: content, mimeType: 'text/html',
                        replyTo: '$DEFAULT_REPLYTO', subject: subject,
                        to: to, attachLog: true )
                    }
                }
            }
    }
}
